[
    {
        "start_line": 268,
        "end_line": 272,
        "code": [
            "if(!playerTempAddress[myid].send(playerTempBetValue[myid])){",
            "LogResult(serialNumberOfResult, playerBetId[myid], playerTempAddress[myid], playerNumber[myid], playerDieResult[myid], playerTempBetValue[myid], 4, proof);",
            "playerPendingWithdrawals[playerTempAddress[myid]] = safeAdd(playerPendingWithdrawals[playerTempAddress[myid]], playerTempBetValue[myid]);"
        ]
    },
    {
        "start_line": 304,
        "end_line": 308,
        "code": [
            "if(!playerTempAddress[myid].send(playerTempReward[myid])){",
            "LogResult(serialNumberOfResult, playerBetId[myid], playerTempAddress[myid], playerNumber[myid], playerDieResult[myid], playerTempReward[myid], 2, proof);",
            "playerPendingWithdrawals[playerTempAddress[myid]] = safeAdd(playerPendingWithdrawals[playerTempAddress[myid]], playerTempReward[myid]);"
        ]
    },
    {
        "start_line": 336,
        "end_line": 339,
        "code": [
            "if(!playerTempAddress[myid].send(1)){",
            "playerPendingWithdrawals[playerTempAddress[myid]] = safeAdd(playerPendingWithdrawals[playerTempAddress[myid]], 1);"
        ]
    },
    {
        "start_line": 358,
        "end_line": 365,
        "code": [
            "if (msg.sender.call.value(withdrawAmount)()) {",
            "return true;",
            "} else {",
            "playerPendingWithdrawals[msg.sender] = withdrawAmount;",
            "return false;"
        ]
    },
    {
        "start_line": 447,
        "end_line": 448,
        "code": [
            "if(!sendTo.send(amount)) throw;",
            "LogOwnerTransfer(sendTo, amount);"
        ]
    },
    {
        "start_line": 465,
        "end_line": 465,
        "code": [
            "if(!sendTo.send(originalPlayerBetValue)) throw;"
        ]
    }
]