{
    "vulnerabilities": [
        {
            "vulnerableLines": "1062-1062",
            "vulnerableCode": [
                "admin.transfer(_com);"
            ],
            "vulnerabilityReason": "The call to `admin.transfer(_com)` occurs after relevant state variables may have already been modified, allowing an attacker to exploit the state before the transaction is finalized.",
            "potentialSecurityRisk": "A malicious contract could call this function and attempt to manipulate the withdrawing process, potentially leading to multiple unauthorized withdrawals or changes to contract state before the balance is updated, resulting in loss of funds.",
            "fixedCode": "uint256 _com = (_pot.mul(7)) / 100;\nrequire(address(admin).send(_com), 'Transfer failed'); // Use require to check for success."
        },
        {
            "vulnerableLines": "1085-1085",
            "vulnerableCode": [
                "plyr_[_pID].addr.transfer(_eth);"
            ],
            "vulnerabilityReason": "Using `transfer()` to send Ether can expose the contract to reentrancy attacks if there are no checks or updates on state prior to the transfer. If the player has a malicious fallback function, they can re-enter this contract before the state updates happen.",
            "potentialSecurityRisk": "An attacker could exploit this by making a recursive call back to this function, allowing them to withdraw multiple times before their actual balance is deducted from the contract, effectively draining it.",
            "fixedCode": "if (_eth > 0) {\n    require(plyr_[_pID].addr.send(_eth), 'Transfer failed'); // Ensure the transfer is successful.\n}"
        }
    ]
}