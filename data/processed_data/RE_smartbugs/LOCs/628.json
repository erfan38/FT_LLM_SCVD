{
    "vulnerabilities": [
        {
            "vulnerableLines": "413-413",
            "vulnerableCode": [
                "if (msg.sender.call.value(withdrawAmount)()) {"
            ],
            "vulnerabilityReason": "The use of `msg.sender.call.value()` allows the recipient to execute fallback functions, which can re-invoke `player_withdrawPendingTransactions` before the pending withdrawal is reset, leading to multiple withdrawals being processed without updating the state correctly.",
            "potentialSecurityRisk": "An attacker controlling `msg.sender` can re-enter the `player_withdrawPendingTransactions` function multiple times, allowing them to withdraw more funds than they are entitled to before the contract updates the `playerPendingWithdrawals` mapping, leading to potential loss of funds.",
            "fixedCode": "uint withdrawAmount = playerPendingWithdrawals[msg.sender];\nrequire(withdrawAmount > 0, \"No funds to withdraw\");\nplayerPendingWithdrawals[msg.sender] = 0;\n(bool success, ) = msg.sender.call.value(withdrawAmount)();\nrequire(success, \"Transfer failed\");"
        }
    ]
}