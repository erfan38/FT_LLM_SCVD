{
    "vulnerabilities": [
        {
            "vulnerableLines": "104-104",
            "vulnerableCode": [
                "if (!founder.call.value(msg.value)()) throw;"
            ],
            "vulnerabilityReason": "The contract sends Ether to the founder before making necessary state updates. This allows an attacker to call back into the `buyRecipient` function before the state changes, leading to reentrant calls that can drain the contract's balance.",
            "potentialSecurityRisk": "An attacker could exploit this to make multiple withdrawals before the state reflects the balance change, potentially draining the contract of all funds it holds.",
            "fixedCode": "// Update state variables before sending Ether\nuint tokens = safeMul(msg.value, price());\nbalances[recipient] = safeAdd(balances[recipient], tokens);\ntotalSupply = safeAdd(totalSupply, tokens);\npresaleEtherRaised = safeAdd(presaleEtherRaised, msg.value);\n\n// Then send Ether safely\nif (!founder.call.value(msg.value)()) throw;"
        }
    ]
}