[
    {
        "start_line": 134,
        "end_line": 139,
        "code": [
            "if(randReuslt < rollUnder){",
            "    uint playerProfit = ((((msg.value * (maxNumber-(safeSub(rollUnder,1)))) / (safeSub(rollUnder,1))+msg.value))*houseEdge/houseEdgeDivisor)-msg.value;",
            "    contractBalance = safeSub(contractBalance, playerProfit);",
            "    uint reward = safeAdd(playerProfit, msg.value);"
        ]
    },
    {
        "start_line": 193,
        "end_line": 198,
        "code": [
            "if (msg.sender.call.value(withdrawAmount)()) {",
            "    return true;",
            "} else {",
            "    playerPendingWithdrawals[msg.sender] = withdrawAmount;"
        ]
    }
]