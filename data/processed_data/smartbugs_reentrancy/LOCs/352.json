{
    "vulnerabilities": [
        {
            "vulnerableLines": "81-81",
            "vulnerableCode": [
                "if (!msg.sender.call.value(amount)()) throw;"
            ],
            "vulnerabilityReason": "The use of low-level call (call.value()) to send Ether allows the recipient contract to execute arbitrary code, including making recursive calls to withdraw funds from the original contract before the state has been updated, enabling reentrancy attacks.",
            "potentialSecurityRisk": "An attacker can exploit this vulnerability by deploying a malicious contract that calls back into the withdraw function, leading to multiple withdrawals before the contract's state reflects the deductions, potentially draining the contract of Ether.",
            "fixedCode": "if (tokens[0][msg.sender] < amount) throw; // Check balance before any actions\n\nif (!msg.sender.send(amount)) throw; // Use send which limits gas\n\n// If the above is successful, reduce the balance\n\ntokens[0][msg.sender] = safeSub(tokens[0][msg.sender], amount);"
        }
    ]
}