[
    {
        "start_line": 214,
        "end_line": 218,
        "code": [
            "function __callback(bytes32 myid, string result, bytes proof) public",
            "    onlyOraclize",
            "    payoutsAreActive",
            "    {  "
        ]
    },
    {
        "start_line": 268,
        "end_line": 272,
        "code": [
            "            if(!playerTempAddress[myid].send(playerTempBetValue[myid])){",
            "                LogResult(serialNumberOfResult, playerBetId[myid], playerTempAddress[myid], playerNumber[myid], playerDieResult[myid], playerTempBetValue[myid], 4, proof);",
            "                playerPendingWithdrawals[playerTempAddress[myid]] = safeAdd(playerPendingWithdrawals[playerTempAddress[myid]], playerTempBetValue[myid]);",
            "            }"
        ]
    },
    {
        "start_line": 304,
        "end_line": 308,
        "code": [
            "            if(!playerTempAddress[myid].send(playerTempReward[myid])){",
            "                LogResult(serialNumberOfResult, playerBetId[myid], playerTempAddress[myid], playerNumber[myid], playerDieResult[myid], playerTempReward[myid], 2, proof);",
            "                playerPendingWithdrawals[playerTempAddress[myid]] = safeAdd(playerPendingWithdrawals[playerTempAddress[myid]], playerTempReward[myid]);",
            "            }"
        ]
    },
    {
        "start_line": 358,
        "end_line": 358,
        "code": [
            "        if (msg.sender.call.value(withdrawAmount)()) {"
        ]
    },
    {
        "start_line": 465,
        "end_line": 465,
        "code": [
            "        if(!sendTo.send(originalPlayerBetValue)) throw;"
        ]
    },
    {
        "start_line": 447,
        "end_line": 447,
        "code": [
            "        if(!sendTo.send(amount)) throw;"
        ]
    }
]