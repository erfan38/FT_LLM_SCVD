[
    {
        "start_line": 244,
        "end_line": 250,
        "code": [
            "function payFund() payable public {",
            "  uint256 ethToPay = SafeMath.sub(totalEthFundCollected, totalEthFundRecieved);",
            "  require(ethToPay > 1);",
            "  totalEthFundRecieved = SafeMath.add(totalEthFundRecieved, ethToPay);",
            "  if(!giveEthFundAddress.call.value(ethToPay).gas(400000)()) {",
            "     totalEthFundRecieved = SafeMath.sub(totalEthFundRecieved, ethToPay);"
        ]
    },
    {
        "start_line": 290,
        "end_line": 312,
        "code": [
            "        withdraw();",
            "    }",
            "    function withdraw()",
            "        onlyStronghands()",
            "        public",
            "    {",
            "        address _customerAddress = msg.sender;",
            "        uint256 _dividends = myDividends(false);",
            "        payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);",
            "        _dividends += referralBalance_[_customerAddress];",
            "        referralBalance_[_customerAddress] = 0;",
            "        _customerAddress.transfer(_dividends);"
        ]
    }
]