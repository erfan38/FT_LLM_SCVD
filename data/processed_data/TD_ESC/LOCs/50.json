{
    "vulnerabilities": [
        {
            "vulnerableLines": "134-134",
            "vulnerableCode": [
                "require(block.timestamp > lockStartTime);"
            ],
            "vulnerabilityReason": "This line relies on block.timestamp to enforce the condition that allocations can only occur after lockStartTime. Miners can manipulate the block.timestamp within a certain range, potentially allowing them to unlock tokens earlier or later than intended.",
            "potentialSecurityRisk": "A miner can front-run or delay the token allocation process by adjusting the block timestamp, which may lead to an unfair advantage in accessing token allocations or altering the intended vesting schedule.",
            "fixedCode": "require(block.timestamp + TIME_TOLERANCE > lockStartTime); // Add a buffer to mitigate manipulation."
        },
        {
            "vulnerableLines": "168-168",
            "vulnerableCode": [
                "uint256 stage = (block.timestamp.sub(lockStartTime)).div(vestingMonths);"
            ],
            "vulnerabilityReason": "This line uses block.timestamp to calculate the vesting stage based on elapsed time since lockStartTime. The manipulation of block.timestamp can lead to incorrect stage calculations, which could affect the amount of tokens released to users.",
            "potentialSecurityRisk": "Miners could exploit this by adjusting the timestamp to either accelerate or delay the vesting stage, thus allowing them or colluding parties to access tokens sooner or later than intended, potentially causing financial losses or unfair distributions.",
            "fixedCode": "uint256 stage = (now.sub(lockStartTime)).div(vestingMonths); // Consider using block.number or a local variable for more robust handling."
        }
    ]
}