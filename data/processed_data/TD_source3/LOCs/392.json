{
    "vulnerabilities": [
        {
            "vulnerableLines": "59-60",
            "vulnerableCode": [
                "startTime = block.timestamp;",
                "endTime = startTime + 365 days;"
            ],
            "vulnerabilityReason": "By setting startTime and endTime based on block.timestamp in the constructor, the duration of the airdrop becomes dependent on the block timestamp, which can be manipulated by miners. They have control over the timestamp when they mine the blocks, potentially leading to unforeseen extensions or reductions in the airdrop period.",
            "potentialSecurityRisk": "Miners can exploit the manipulation of the block.timestamp to impact the airdrop window, either by ending it too early or extending it unduly, which can disrupt the intended duration and distribution of tokens.",
            "fixedCode": "// Consider using block.number or incorporating a buffer using block.timestamp,for example:\nstartTime = block.timestamp;\nendTime = startTime + 365 days + TIME_TOLERANCE; // where TIME_TOLERANCE could be a defined buffer."
        },
        {
            "vulnerableLines": "103-103",
            "vulnerableCode": [
                "require(block.timestamp > endTime);"
            ],
            "vulnerabilityReason": "The burnTokens function checks if the current block timestamp is greater than endTime. This reliance on block.timestamp introduces a risk that miners could manipulate the timing of when tokens are burned, potentially allowing them to delay or prevent the burn operation.",
            "potentialSecurityRisk": "Miners could adjust the block timestamp to prevent the execution of burnTokens, leading to unreliable token supply management and potential exploitation within the tokenomics of the contract.",
            "fixedCode": "require(block.timestamp > endTime + TIME_TOLERANCE); // where TIME_TOLERANCE is a defined buffer to mitigate timestamp manipulation."
        }
    ]
}