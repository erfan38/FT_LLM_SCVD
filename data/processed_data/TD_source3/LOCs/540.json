{
    "vulnerabilities": [
        {
            "vulnerableLines": "85-86",
            "vulnerableCode": [
                "if (block.timestamp <= startTime) { return ((rate / 100) * 120); }",
                "if (block.timestamp <= startTime.add(1 days)) {return ((rate / 100) * 108);}"
            ],
            "vulnerabilityReason": "The 'getRate' function uses block.timestamp to determine token rates based on time thresholds, making it vulnerable to manipulation by miners, who can adjust the block timestamp.",
            "potentialSecurityRisk": "Miners could manipulate the block timestamp to grant themselves or their preferred buyers a better token rate, resulting in financial losses for others and undermining the fairness of the token distribution.",
            "fixedCode": "// Using a buffer for time checks to reduce miner manipulation risk\nif (block.timestamp + TIME_TOLERANCE <= startTime) { return ((rate / 100) * 120); } \nif (block.timestamp + TIME_TOLERANCE <= startTime.add(1 days)) { return ((rate / 100) * 108);} "
        },
        {
            "vulnerableLines": "152-170",
            "vulnerableCode": [
                "bool withinPeriod = now >= presaleStartTime && now <= endTime;",
                "require(withinPeriod);"
            ],
            "vulnerabilityReason": "The '_preValidatePurchase' function uses 'now' to check if the purchase is within the allowed period, which is subject to manipulation by miners.",
            "potentialSecurityRisk": "Miners manipulating the timestamp could allow purchases outside of the intended period, disrupting the sale's timeline and potentially allowing unfair advantages to certain users.",
            "fixedCode": "// Using a buffer to protect against miner timestamp manipulation\nbool withinPeriod = (now + TIME_TOLERANCE) >= presaleStartTime && (now + TIME_TOLERANCE) <= endTime; \nrequire(withinPeriod);"
        },
        {
            "vulnerableLines": "198-200",
            "vulnerableCode": [
                "if(block.timestamp <= startTime) {",
                "if(weiRaised.add(privateContribution) >= presaleFundingGoal) {"
            ],
            "vulnerabilityReason": "Use of block.timestamp to determine logic flow around funding goals makes it vulnerable to miner manipulation.",
            "potentialSecurityRisk": "Miners could influence the conditions for reaching funding goals by manipulating timestamps, potentially allowing them to unfairly benefit from the transactions.",
            "fixedCode": "// Using a time buffer to mitigate manipulation\nif ((block.timestamp + TIME_TOLERANCE) <= startTime) { if(weiRaised.add(privateContribution) >= presaleFundingGoal) {"
        }
    ]
}