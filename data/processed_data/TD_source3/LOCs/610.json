{
    "vulnerabilities": [
        {
            "vulnerableLines": "149-151",
            "vulnerableCode": [
                "if (block.timestamp >= tiers[i].startTime && block.timestamp <= tiers[i].endTime) {",
                "return i;"
            ],
            "vulnerabilityReason": "Using 'block.timestamp' to check if the current time is within a tier limits allows manipulation by miners, potentially giving them advantages by altering prices or availability of tokens.",
            "potentialSecurityRisk": "Miners could manipulate timestamps so that they fall into a more favorable tier, resulting in undervalued token purchases, thus affecting sales and revenues.",
            "fixedCode": "if (block.timestamp + TIME_TOLERANCE >= tiers[i].startTime && block.timestamp <= tiers[i].endTime) { return i; }"
        },
        {
            "vulnerableLines": "164-168",
            "vulnerableCode": [
                "if (endTime < block.timestamp) {",
                "return (0, 0);",
                "}",
                "if (startTime > block.timestamp) {",
                "activeTier = PRE_ICO_TIER_FIRST;"
            ],
            "vulnerabilityReason": "This code checks if the current time is outside specified time limits for token purchase, relying on block.timestamp which can be adjusted by miners.",
            "potentialSecurityRisk": "Miners can manipulate the timestamps to incorrectly influence the active tier and the ability to purchase tokens, undermining the economic model and profitability.",
            "fixedCode": "if (endTime < block.timestamp + TIME_TOLERANCE) { return (0, 0); } if (startTime > block.timestamp + TIME_TOLERANCE) { activeTier = PRE_ICO_TIER_FIRST; }"
        },
        {
            "vulnerableLines": "190-194",
            "vulnerableCode": [
                "if (activeTier == tiers.length) {",
                "if (endTime < block.timestamp) {",
                "return (0, 0);",
                "}",
                "if (startTime > block.timestamp) {"
            ],
            "vulnerabilityReason": "This function sets conditions based on block.timestamp, which can easily be influenced by miners to manipulate active tier and pertinent prices accordingly.",
            "potentialSecurityRisk": "Miners might exploit this feature to shift the effective end or start times of tiers, leading to advantageous token pricing or availability.",
            "fixedCode": "if (activeTier == tiers.length) { if (endTime < block.timestamp + TIME_TOLERANCE) { return (0, 0); } if (startTime > block.timestamp + TIME_TOLERANCE) { ... } }"
        },
        {
            "vulnerableLines": "254-254",
            "vulnerableCode": [
                "if (isActive() || block.timestamp < startTime || collectedUSD.add(preICOStats.collectedUSD) >= softCap) {"
            ],
            "vulnerabilityReason": "Depending on 'block.timestamp' for crucial checks regarding funding and refund eligibility could lead to miner manipulation.",
            "potentialSecurityRisk": "A miner could manipulate the timestamp to either trigger refunds or lead users to mistakenly think the sale is still active or inactive, affecting liquidity and sales.",
            "fixedCode": "if (isActive() || block.timestamp + TIME_TOLERANCE < startTime || collectedUSD.add(preICOStats.collectedUSD) >= softCap) {"
        },
        {
            "vulnerableLines": "237-239",
            "vulnerableCode": [
                "if (block.timestamp >= endTime && maxTokenSupply > soldTokens) {",
                "token.burnUnsoldTokens(maxTokenSupply.sub(soldTokens));"
            ],
            "vulnerabilityReason": "This method's decision to burn unsold tokens uses 'block.timestamp', making it vulnerable to miner timestamp adjustments.",
            "potentialSecurityRisk": "Miners could adjust timestamps to delay token burning, distorting token economics.",
            "fixedCode": "if (block.timestamp + TIME_TOLERANCE >= endTime && maxTokenSupply > soldTokens) { token.burnUnsoldTokens(maxTokenSupply.sub(soldTokens)); }"
        }
    ]
}