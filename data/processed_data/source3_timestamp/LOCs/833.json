[
    {
        "start_line": 52,
        "end_line": 52,
        "code": [
            "        return block.timestamp;"
        ]
    },
    {
        "start_line": 56,
        "end_line": 56,
        "code": [
            "        return dayFor(time());"
        ]
    },
    {
        "start_line": 62,
        "end_line": 72,
        "code": [
            "        if (timestamp < startTime) {",
            "            return 0;",
            "        }",
            "        if (timestamp >= startTime && timestamp < finalWindowTime) {",
            "            return sub(timestamp, startTime) / 5 minutes + 1;",
            "        }",
            "        if (timestamp >= finalWindowTime && timestamp < finishTime) {",
            "            return 176;",
            "        }",
            "        return 999;"
        ]
    },
    {
        "start_line": 83,
        "end_line": 83,
        "code": [
            "        assert(today() > 0 && today() <= numberOfDays + 1);"
        ]
    },
    {
        "start_line": 86,
        "end_line": 86,
        "code": [
            "        assert(day >= today());"
        ]
    },
    {
        "start_line": 100,
        "end_line": 100,
        "code": [
            "        buyWithLimit(today(), 0);"
        ]
    },
    {
        "start_line": 109,
        "end_line": 109,
        "code": [
            "        assert(today() > day);"
        ]
    },
    {
        "start_line": 130,
        "end_line": 130,
        "code": [
            "        for (uint i = 0; i < today(); i++) {"
        ]
    },
    {
        "start_line": 140,
        "end_line": 140,
        "code": [
            "        assert(today() <=  numberOfDays + 1);"
        ]
    },
    {
        "start_line": 150,
        "end_line": 150,
        "code": [
            "        assert(today() > 0);"
        ]
    },
    {
        "start_line": 157,
        "end_line": 157,
        "code": [
            "        assert(time() > finishTime);"
        ]
    }
]