{
    "vulnerabilities": [
        {
            "vulnerableLines": "26-26",
            "vulnerableCode": [
                "require(started == true && startTime <= block.timestamp);"
            ],
            "vulnerabilityReason": "This check allows anyone to verify if the mining has started only if the current block timestamp exceeds startTime. Miners can manipulate this timestamp to make it appear as though mining has started prematurely, altering the expected behavior of the contract.",
            "potentialSecurityRisk": "Miners may manipulate the timestamp during the mining process to initiate or influence token distribution, potentially leading to unfair token rewards.",
            "fixedCode": "require(started == true && startTime <= now);"
        },
        {
            "vulnerableLines": "35-37",
            "vulnerableCode": [
                "require(_startTime >= block.timestamp);",
                "require(_startTime <= block.timestamp + 60 days);"
            ],
            "vulnerabilityReason": "The startMining function uses block.timestamp to determine a valid range for starting mining. Miners could alter the timestamps to increase the attractiveness of starting mining just before a favorable time window.",
            "potentialSecurityRisk": "By manipulating timestamps, miners may set the startTime in favor of their transactions, compromising fairness in reward distribution.",
            "fixedCode": "require(_startTime >= now + TIME_TOLERANCE); require(_startTime <= now + 60 days + TIME_TOLERANCE);"
        },
        {
            "vulnerableLines": "61-61",
            "vulnerableCode": [
                "if(started == false || startTime >= block.timestamp){"
            ],
            "vulnerabilityReason": "This statement evaluates the eligibility for minting based on block.timestamp. Miners could manipulate the timestamp to gain access to minting before intended, undermining the minting plan.",
            "potentialSecurityRisk": "Malicious actors could exploit this to mint more tokens than intended or in an interfered manner, affecting the balance of token distribution.",
            "fixedCode": "if(started == false || startTime >= now){ // now provides a reliable, non-dependable approach removing block.timestamp usage."
        },
        {
            "vulnerableLines": "65-65",
            "vulnerableCode": [
                "if (block.timestamp >= startTime.add(duration)){"
            ],
            "vulnerabilityReason": "This condition checks if the mining period has ended based on block.timestamp, making it possible for miners to extend or shorten this operational window by manipulating the timestamps.",
            "potentialSecurityRisk": "Mining rewards may be claimed sooner or longer than designed, arbitraging the timeline of reward reductions or halting completely.",
            "fixedCode": "if (now >= startTime.add(duration)){ // using now avoids dependence on miner-manipulated timestamps."
        },
        {
            "vulnerableLines": "69-70",
            "vulnerableCode": [
                "uint currentYear = block.timestamp.sub(startTime).div(1 years);",
                "uint currentDay = (block.timestamp.sub(startTime) % (1 years)).div(1 days);"
            ],
            "vulnerabilityReason": "Using block.timestamp in calculations for currentYear and currentDay opens the potential for miner manipulation affecting the reward schedule of minting.",
            "potentialSecurityRisk": "Miners could gain control over the yield and acquire rewards that are not reflective of their actual participation time, distorting fair token distribution.",
            "fixedCode": "uint currentYear = now.sub(startTime).div(1 years); uint currentDay = (now.sub(startTime) % (1 years)).div(1 days);"
        }
    ]
}