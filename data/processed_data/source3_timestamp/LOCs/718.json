{
    "vulnerabilities": [
        {
            "vulnerableLines": "60-60",
            "vulnerableCode": [
                "return (block.timestamp < ALLOCATION_LOCK_END_TIMESTAMP);"
            ],
            "vulnerabilityReason": "The function inAllocationLockPeriod uses block.timestamp to determine if the current time is before the lock end timestamp ALLOCATION_LOCK_END_TIMESTAMP. This creates a dependency on the timestamp that miners can manipulate when creating blocks, leading to potential exploitation.",
            "potentialSecurityRisk": "Miners could manipulate the block timestamp around the allocation lock period, resulting in unauthorized token transfers if they manage to set the clock to a time where the allocation lock is falsely perceived as not in effect. This undermines the purpose of the allocation lock and could lead to financial loss for the contract participants.",
            "fixedCode": "return (block.timestamp + TIME_TOLERANCE < ALLOCATION_LOCK_END_TIMESTAMP); // Adding a buffer to mitigate manipulation risks."
        }
    ]
}