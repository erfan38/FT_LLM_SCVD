{
    "vulnerabilities": [
        {
            "vulnerableLines": "8-8",
            "vulnerableCode": [
                "if(_addr.call.value(_wei)()) {"
            ],
            "vulnerabilityReason": "The use of `call.value(_wei)()` allows the recipient contract to execute code before the state is updated, which can lead to reentrancy. If the `_addr` is a malicious contract, it can call back into the `WithdrawToHolder` function before the balance has been deducted, allowing multiple withdrawals before the state is properly updated.",
            "potentialSecurityRisk": "A malicious contract could exploit this vulnerability to repeatedly call `WithdrawToHolder`, draining the contract of Ether if it can control the execution flow before the `Holders[_addr]` balance is decremented.",
            "fixedCode": "require(Holders[_addr] >= _wei, \"Insufficient balance\");\nHolders[_addr] -= _wei;\nbool success = _addr.call.value(_wei)();\nrequire(success, \"Transfer failed\");"
        }
    ]
}