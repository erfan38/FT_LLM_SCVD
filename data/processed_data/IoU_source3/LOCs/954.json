{
    "vulnerabilities": [
        {
            "vulnerableLines": "8-8",
            "vulnerableCode": [
                "votingPowerPerRound[currentRound] = totalShares * _userShares / 1000;"
            ],
            "vulnerabilityReason": "The multiplication operation 'totalShares * _userShares' can cause an integer overflow if '_userShares' is a sufficiently large value. This is particularly dangerous since it could lead to incorrect calculations of voting power, potentially allowing users to receive more or less voting power than intended.",
            "potentialSecurityRisk": "If an overflow occurs, it could grant unintended voting power to users, potentially allowing them to influence decisions disproportionately. This could undermine the integrity of the voting system, leading to a situation where users have voting power that does not correspond to their actual shares.",
            "fixedCode": "require(_userShares <= (type(uint256).max / totalShares), \"User shares too high to prevent overflow\");\nvotingPowerPerRound[currentRound] = (totalShares * _userShares) / 1000; // This ensures that the multiplication does not overflow."
        }
    ]
}