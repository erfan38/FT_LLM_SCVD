{
    "vulnerabilities": [
        {
            "vulnerableLines": "3-3",
            "vulnerableCode": [
                "uint blocksPassed = _endBlock - _startBlock;"
            ],
            "vulnerabilityReason": "The code computes the difference between `_endBlock` and `_startBlock` without checking which value is larger. If `_startBlock` is greater than `_endBlock`, it will result in an integer underflow, leading to a very large value instead of a negative result, which causes incorrect calculations and potential bugs in the contract's logic.",
            "potentialSecurityRisk": "This vulnerability could allow the contract to miscalculate the number of blocks passed, leading to incorrect behavior when this value is used elsewhere in the contract, such as causing erroneous logic paths or unintended results in any functionalities dependent on the `blocksPassed` variable.",
            "fixedCode": "require(_endBlock >= _startBlock, \"End block must be greater than or equal to start block\"); \nuint blocksPassed = _endBlock - _startBlock;"
        }
    ]
}