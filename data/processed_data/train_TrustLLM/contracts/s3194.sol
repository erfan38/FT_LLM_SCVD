function quitLock() external override nonReentrant { LockedBalance memory locked_ = locked[msg.sender]; require(locked_.amount > 0, "No lock"); require(locked_.end > block.timestamp, "Lock expired"); require(locked_.delegatee == msg.sender, "Lock delegated"); uint256 value = uint256(uint128(locked_.amount)); LockedBalance memory newLocked = _copyLock(locked_); newLocked.amount = 0; newLocked.delegated -= int128(int256(value)); newLocked.delegatee = address(0); locked[msg.sender] = newLocked; newLocked.end = 0; newLocked.delegated = 0; _checkpoint(msg.sender, locked_, newLocked); uint256 penaltyRate = _calculatePenaltyRate(locked_.end); uint256 penaltyAmount = (value * penaltyRate) / 10**18; penaltyAccumulated += penaltyAmount; uint256 remainingAmount = value - penaltyAmount; require(token.transfer(msg.sender, remainingAmount), "Transfer failed"); emit Withdraw(msg.sender, value, LockAction.QUIT, block.timestamp); }
