function _updateDropPerSecond() internal returns (uint256){ if(block.timestamp > startDropTimestamp + dropDecreaseDuration) { if(currentDropPerSecond != endDropPerSecond) { currentDropPerSecond = endDropPerSecond; lastDropUpdate = block.timestamp; } return endDropPerSecond; } if(block.timestamp < lastDropUpdate + MONTH) return currentDropPerSecond; uint256 dropDecreasePerMonth = (startDropPerSecond - endDropPerSecond) / (dropDecreaseDuration / MONTH); uint256 nbMonthEllapsed = (block.timestamp - lastDropUpdate) / MONTH; uint256 dropPerSecondDecrease = dropDecreasePerMonth * nbMonthEllapsed; uint256 newDropPerSecond = currentDropPerSecond - dropPerSecondDecrease > endDropPerSecond ? currentDropPerSecond - dropPerSecondDecrease : endDropPerSecond; currentDropPerSecond = newDropPerSecond; lastDropUpdate = block.timestamp; return newDropPerSecond; }
