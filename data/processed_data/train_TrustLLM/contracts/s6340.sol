function extendLock( uint _id, address _asset, uint _amount, uint _period, address _sender ) external onlyManager() { Bond memory bond = idToBond(_id); Bond storage _bond = _idToBond[_id]; require(bond.owner == _sender, "!owner"); require(!bond.expired, "Expired"); require(bond.asset == _asset, "!BondAsset"); require(bond.pending == 0); require(epoch[bond.asset] == block.timestamp/DAY, "Bad epoch"); require(bond.period+_period <= 365, "MAX PERIOD"); unchecked { uint shares = (bond.amount + _amount) * (bond.period + _period) / 365; uint expireEpoch = block.timestamp/DAY + bond.period + _period; totalShares[bond.asset] += shares-bond.shares; _bond.shares = shares; _bond.amount += _amount; _bond.expireEpoch = expireEpoch; _bond.period += _period; _bond.mintTime = block.timestamp; _bond.mintEpoch = epoch[bond.asset]; bondPaid[_id][bond.asset] = accRewardsPerShare[bond.asset][epoch[bond.asset]] * _bond.shares / 1e18; } emit ExtendLock(_period, _amount, _sender, _id); }
