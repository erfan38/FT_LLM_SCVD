function rotateNodeRunnerOfSmartWallet(address _current, address _new, bool _wasPreviousNodeRunnerMalicious) external { require(_new != address(0) && _current != _new, "New is zero or current"); address wallet = smartWalletOfNodeRunner[_current]; require(wallet != address(0), "Wallet does not exist"); require(_current == msg.sender || dao == msg.sender, "Not current owner or DAO"); address newRunnerCurrentWallet = smartWalletOfNodeRunner[_new]; require(newRunnerCurrentWallet == address(0), "New runner has a wallet"); smartWalletOfNodeRunner[_new] = wallet; nodeRunnerOfSmartWallet[wallet] = _new; delete smartWalletOfNodeRunner[_current]; if (msg.sender == dao && _wasPreviousNodeRunnerMalicious) { bannedNodeRunners[_current] = true; emit NodeRunnerBanned(_current); } emit NodeRunnerOfSmartWalletRotated(wallet, _current, _new); }
