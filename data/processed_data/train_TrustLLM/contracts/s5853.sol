function _deployFirst( bytes32 _saltSeed, bytes memory _configData, bytes memory _immutables, uint256 _maxLTV, uint256 _liquidationFee, uint256 _maturityDate, uint256 _penaltyRate, bool _isBorrowerWhitelistActive, bool _isLenderWhitelistActive ) private returns (address _pairAddress) { { bytes32 salt = keccak256(abi.encodePacked(_saltSeed, _configData)); require(deployedPairsBySalt[salt] == address(0), "FraxlendPairDeployer: Pair already deployed"); bytes memory _creationCode = BytesLib.concat( SSTORE2.read(contractAddress1), SSTORE2.read(contractAddress2) ); bytes memory bytecode = abi.encodePacked( _creationCode, abi.encode( _configData, _immutables, _maxLTV, _liquidationFee, _maturityDate, _penaltyRate, _isBorrowerWhitelistActive, _isLenderWhitelistActive ) ); assembly { _pairAddress := create2(0, add(bytecode, 32), mload(bytecode), salt) } require(_pairAddress != address(0), "FraxlendPairDeployer: create2 failed"); deployedPairsBySalt[salt] = _pairAddress; } return _pairAddress; }
