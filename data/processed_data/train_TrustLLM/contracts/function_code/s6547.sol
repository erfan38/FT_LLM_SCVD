function mint( Pool storage pool, TimeswapV2PoolMintParam memory param, uint96 blockTimestamp ) external returns (uint160 liquidityAmount, uint256 long0Amount, uint256 long1Amount, uint256 shortAmount, bytes memory data) { if (pool.liquidity != 0) updateDurationWeightBeforeMaturity(pool, blockTimestamp); LiquidityPosition storage liquidityPosition = pool.liquidityPositions[param.to]; uint256 longAmount; if (param.transaction == TimeswapV2PoolMint.GivenLiquidity) { (longAmount, shortAmount) = ConstantProduct.calculateGivenLiquidityDelta( pool.sqrtInterestRate, liquidityAmount = param.delta.toUint160(), DurationCalculation.unsafeDurationFromNowToMaturity(param.maturity, blockTimestamp), true ); if (longAmount == 0) Error.zeroOutput(); if (shortAmount == 0) Error.zeroOutput(); } else if (param.transaction == TimeswapV2PoolMint.GivenLong) { (liquidityAmount, shortAmount) = ConstantProduct.calculateGivenLiquidityLong( pool.sqrtInterestRate, longAmount = param.delta, DurationCalculation.unsafeDurationFromNowToMaturity(param.maturity, blockTimestamp), true ); if (liquidityAmount == 0) Error.zeroOutput(); if (shortAmount == 0) Error.zeroOutput(); } else if (param.transaction == TimeswapV2PoolMint.GivenShort) { (liquidityAmount, longAmount) = ConstantProduct.calculateGivenLiquidityShort( pool.sqrtInterestRate, shortAmount = param.delta, DurationCalculation.unsafeDurationFromNowToMaturity(param.maturity, blockTimestamp), true ); if (liquidityAmount == 0) Error.zeroOutput(); if (longAmount == 0) Error.zeroOutput(); } else if (param.transaction == TimeswapV2PoolMint.GivenLarger) { (liquidityAmount, longAmount, shortAmount) = ConstantProduct.calculateGivenLiquidityLargerOrSmaller( pool.sqrtInterestRate, param.delta, DurationCalculation.unsafeDurationFromNowToMaturity(param.maturity, blockTimestamp), true ); if (liquidityAmount == 0) Error.zeroOutput(); if (longAmount == 0) Error.zeroOutput(); if (shortAmount == 0) Error.zeroOutput(); } (long0Amount, long1Amount, data) = ITimeswapV2PoolMintCallback(msg.sender).timeswapV2PoolMintChoiceCallback( TimeswapV2PoolMintChoiceCallbackParam({ strike: param.strike, maturity: param.maturity, longAmount: longAmount, shortAmount: shortAmount, liquidityAmount: liquidityAmount, data: param.data }) ); Error.checkEnough(StrikeConversion.combine(long0Amount, long1Amount, param.strike, false), longAmount); if (long0Amount != 0) pool.long0Balance += long0Amount; if (long1Amount != 0) pool.long1Balance += long1Amount; liquidityPosition.mint(liquidityAmount); pool.liquidity += liquidityAmount; }
