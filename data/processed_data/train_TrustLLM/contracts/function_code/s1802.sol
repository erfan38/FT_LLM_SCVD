function emergencyWithdraw(uint256 amount, address receiver) external returns(uint256) { require(emergency, "hPAL: Not emergency"); require(amount > 0, "hPAL: Null amount"); require(receiver != address(0), "hPAL: Address Zero"); if(userLocks[msg.sender].length != 0){ uint256 currentUserLockIndex = userLocks[msg.sender].length - 1; UserLock storage currentUserLock = userLocks[msg.sender][currentUserLockIndex]; currentTotalLocked -= currentUserLock.amount; totalLocks.push(TotalLock( safe224(currentTotalLocked), safe32(block.number) )); userLocks[msg.sender].push(UserLock( safe128(0), safe48(block.timestamp), safe48(0), safe32(block.number) )); } uint256 userAvailableBalance = balanceOf(msg.sender); uint256 burnAmount = amount > userAvailableBalance ? userAvailableBalance : amount; _burn(msg.sender, burnAmount); pal.safeTransfer(receiver, burnAmount); emit EmergencyUnstake(msg.sender, burnAmount); return burnAmount; }
