{
    "vulnerabilities": [
        {
            "vulnerableLines": "5-6",
            "vulnerableCode": [
                "totalStaked = totalStaked + _amount;",
                "totalStaked = totalStaked - block.timestamp;"
            ],
            "vulnerabilityReason": "The smart contract performs arithmetic operations on `totalStaked` without checking for overflow or underflow. Adding `_amount` to `totalStaked` can result in an overflow if the resulting value exceeds the maximum value of `uint256`. Subtracting `block.timestamp` from `totalStaked` can result in an underflow if `block.timestamp` is greater than `totalStaked`.",
            "potentialSecurityRisk": "These vulnerabilities can lead to incorrect calculations of total staked amounts, allowing for manipulation of the staking pool's balance. This could enable attackers to engage in unintended behavior, such as over-staking or creating conditions that affect reward distributions or withdraw functions, potentially leading to loss of funds for users.",
            "fixedCode": "require(totalStaked + _amount >= totalStaked, 'Overflow detected in stake operation');\ntotalStaked += _amount;\nrequire(totalStaked >= block.timestamp, 'Underflow detected in timestamp subtraction');\ntotalStaked -= block.timestamp; // Avoiding the adjustment logic on staking to prevent underflow."
        }
    ]
}