{
    "vulnerabilities": [
        {
            "vulnerableLines": "5-6",
            "vulnerableCode": [
                "totalBonds = totalBonds + _bondAmount;",
                "totalBonds = totalBonds - block.timestamp;"
            ],
            "vulnerabilityReason": "The contract performs arithmetic operations on `totalBonds` without checking for overflow or underflow. When adding `_bondAmount`, if the sum exceeds the maximum value of uint256, it results in an overflow. Similarly, if `block.timestamp` is greater than `totalBonds`, subtracting it leads to an underflow which will cause the totalBonds to wrap around to a large uint256 value.",
            "potentialSecurityRisk": "An overflow in `totalBonds` could lead to incorrect calculations regarding bonds issued, potentially allowing the contract to behave unpredictably. An underflow could similarly result in unexpected positive values for `totalBonds`, leading to an erroneous state where bonds are mismanaged or incorrectly calculated, compromising the bonding curve mechanism.",
            "fixedCode": "require(totalBonds + _bondAmount >= totalBonds, \"Overflow detected\");\ntotalBonds += _bondAmount;\nrequire(totalBonds >= block.timestamp, \"Underflow detected\");\ntotalBonds -= block.timestamp;"
        }
    ]
}