{
    "vulnerabilities": [
        {
            "vulnerableLines": "181-181",
            "vulnerableCode": [
                "require(block.timestamp >= startAt && block.timestamp <= stopAt);"
            ],
            "vulnerabilityReason": "The contract uses block.timestamp to enforce the time range for purchases, which is manipulable by miners. They can adjust block timestamps to falsify the timing conditions, which could enable or disable valid purchases.",
            "potentialSecurityRisk": "A malicious miner could manipulate the block timestamp so that it falls outside the intended range, preventing valid users from making purchases or allowing them to make illegitimate purchases, resulting in financial loss or unfair advantages.",
            "fixedCode": "require(now >= startAt && now <= stopAt); // Use `now` which is an alias for block.timestamp but with a clearer context."
        },
        {
            "vulnerableLines": "192-192",
            "vulnerableCode": [
                "require(block.timestamp >= grantAt);"
            ],
            "vulnerabilityReason": "This modifier relies on block.timestamp to determine whether the grant is enabled. This reliance allows miners to manipulate the block timestamp, affecting the grant eligibility.",
            "potentialSecurityRisk": "If the block timestamp is manipulated, valid grants may not be executed when they should be, or malicious actors could trigger grants earlier than intended, leading to potential abuse of the grant mechanism.",
            "fixedCode": "require(now >= grantAt);"
        },
        {
            "vulnerableLines": "331-331",
            "vulnerableCode": [
                "require(block.timestamp > grantAt);"
            ],
            "vulnerabilityReason": "This line checks if the block timestamp is greater than grantAt to allow claiming of ETH, which can be manipulated by miners, affecting the unlocking of funds.",
            "potentialSecurityRisk": "Manipulating the block timestamp can allow a miner to execute the claim before grants are legitimately fulfilled or after the intended time, leading to unauthorized access to funds or premature claims.",
            "fixedCode": "require(now > grantAt);"
        }
    ]
}