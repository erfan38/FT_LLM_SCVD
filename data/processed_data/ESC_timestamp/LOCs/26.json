[
    {
        "start_line": 302,
        "end_line": 336,
        "code": [
            "if(window0StartTime != 0 && window0EndTime != 0 && time() >= window0StartTime && time() <= window0EndTime){",
            "if(preICOLimit > 0){",
            "require(msg.value >= preICOLimit);",
            "tokens = safeMult(msg.value, window0TokenExchangeRate);",
            "checkedSupply = safeAdd(window0TotalSupply, tokens);",
            "require(window0TokenCreationCap >= checkedSupply);",
            "assignLockedBalance(msg.sender, tokens);",
            "window0TotalSupply = checkedSupply;",
            "if(multiWallet != 0x0 && instantTransfer) multiWallet.transfer(msg.value);",
            "CreateGameIco(msg.sender, tokens);",
            "}else if(window1StartTime != 0 && window1EndTime!= 0 && time() >= window1StartTime && time() <= window1EndTime){",
            "tokens = safeMult(msg.value, window1TokenExchangeRate);",
            "checkedSupply = safeAdd(window1TotalSupply, tokens);",
            "require(window1TokenCreationCap >= checkedSupply);",
            "balances[msg.sender] += tokens;",
            "window1TotalSupply = checkedSupply;",
            "if(multiWallet != 0x0 && instantTransfer) multiWallet.transfer(msg.value);",
            "CreateGameIco(msg.sender, tokens);",
            "}else if(window2StartTime != 0 && window2EndTime != 0 && time() >= window2StartTime && time() <= window2EndTime){",
            "tokens = safeMult(msg.value, window2TokenExchangeRate);",
            "checkedSupply = safeAdd(window2TotalSupply, tokens);",
            "require(window2TokenCreationCap >= checkedSupply);",
            "balances[msg.sender] += tokens;",
            "window2TotalSupply = checkedSupply;",
            "if(multiWallet != 0x0 && instantTransfer) multiWallet.transfer(msg.value);",
            "CreateGameIco(msg.sender, tokens);",
            "}else{",
            "require(false);",
            "}",
            "function time() internal returns (uint) {",
            "return block.timestamp;"
        ]
    }
]