{
    "vulnerabilities": [
        {
            "vulnerableLines": "301-303",
            "vulnerableCode": [
                "require(endAt_ > block.timestamp && state == State.Inactive);",
                "endAt = endAt_;",
                "startAt = block.timestamp;"
            ],
            "vulnerabilityReason": "The usage of block.timestamp in this check allows miners to manipulate the start time of the ICO, which can lead to starting the ICO erroneously or unfairly benefiting minters by manipulating the start time to their advantage.",
            "potentialSecurityRisk": "A miner can adjust the timestamp to start the ICO earlier than intended or keep it inactive longer, which may disrupt the fair launch of the ICO and provide undue advantage to certain addresses that can influence or manipulate timing.",
            "fixedCode": "require(endAt_ > block.timestamp + TIME_TOLERANCE && state == State.Inactive); // Buffer added to mitigate manipulation."
        },
        {
            "vulnerableLines": "317-324",
            "vulnerableCode": [
                "require(state != State.Terminated &&",
                "state != State.NotCompleted &&",
                "state != State.Completed);",
                "if (collectedWei >= hardCapWei) {",
                "state = State.Completed;",
                "endAt = block.timestamp;"
            ],
            "vulnerabilityReason": "This snippet checks the ICO's state against the block timestamp to mark it as completed, which is vulnerable to miner manipulation, allowing them to alter the end time of the ICO which might lead to premature completion and state changes.",
            "potentialSecurityRisk": "If exploited, a miner can force the contract into a Completed state without reaching the hard cap or correct fundraising conditions by setting the block time to an earlier point, resulting in unfair outcomes for investors and potential financial loss.",
            "fixedCode": "if (collectedWei >= hardCapWei) { state = State.Completed; endAt = block.timestamp + TIME_TOLERANCE; } // Use a buffer to reduce the risk of manipulation."
        },
        {
            "vulnerableLines": "445-460",
            "vulnerableCode": [
                "if (collectedWei >= hardCapWei) {",
                "state = State.Completed;",
                "endAt = block.timestamp;",
                "ICOCompleted(collectedWei);",
                "} else if (block.timestamp >= endAt) {",
                "if (collectedWei < lowCapWei) {",
                "state = State.NotCompleted;",
                "ICONotCompleted();",
                "} else {",
                "state = State.Completed;",
                "ICOCompleted(collectedWei);",
                "}"
            ],
            "vulnerabilityReason": "The check against block.timestamp for determining the state of the ICO (NotCompleted or Completed) makes these state changes subject to miner manipulation, which can cause incorrect states due to block timestamp adjustments.",
            "potentialSecurityRisk": "Malicious miners can trigger an early completion of the ICO or prevent correct status updates, leading investors to believe the ICO is valid when it may not be, resulting in financial damages.",
            "fixedCode": "if (collectedWei >= hardCapWei) { state = State.Completed; endAt = block.timestamp + TIME_TOLERANCE; ICOCompleted(collectedWei); } else if (block.timestamp + TIME_TOLERANCE >= endAt) { // Buffer added to reduce manipulation risk to ICO completion."
        }
    ]
}