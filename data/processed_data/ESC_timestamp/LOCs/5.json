{
    "vulnerabilities": [
        {
            "vulnerableLines": "124-124",
            "vulnerableCode": [
                "require(block.timestamp > lockStartTime);"
            ],
            "vulnerabilityReason": "The contract relies on `block.timestamp` to validate whether the lock period has expired, creating a window for miners to manipulate the timestamp, potentially allowing them to unlock tokens prematurely or keep them locked longer than intended.",
            "potentialSecurityRisk": "A miner can exploit the timestamp dependency to change the outcome of whether tokens are allocatable, possibly enabling themselves or colluding parties to withdraw tokens earlier than designed.",
            "fixedCode": "require(now > lockStartTime); // Using `now` as an alias for `block.timestamp`, adding a buffer in verifications."
        },
        {
            "vulnerableLines": "153-153",
            "vulnerableCode": [
                "uint256 stage = (block.timestamp.sub(lockStartTime)).div(vestingMonths);"
            ],
            "vulnerabilityReason": "This line calculates the vesting stage using `block.timestamp`, making the contract vulnerable to manipulation. A miner could influence the stage calculation, resulting in an unintended release of tokens.",
            "potentialSecurityRisk": "Miners could optimize their block timestamps to manipulate the vesting stages, potentially facilitating earlier distributions of tokens than intended, which compromises the intended distribution logic.",
            "fixedCode": "uint256 stage = (now.sub(lockStartTime)).div(vestingMonths); // Replaced `block.timestamp` with `now`."
        }
    ]
}