{
    "vulnerabilities": [
        {
            "vulnerableLines": "21-21",
            "vulnerableCode": [
                "        balances[msg.sender] -= _weiToWithdraw;"
            ],
            "vulnerabilityReason": "The state update that decreases the user's balance occurs after the external call to transfer Ether. If `msg.sender` is a contract, it could execute a fallback function that calls `withdrawFunds` again, allowing a reentrancy attack before this balance is updated.",
            "potentialSecurityRisk": "An attacker could exploit the reentrancy vulnerability to withdraw more funds than they actually hold in their balance, potentially draining the contract's funds if the external call is successful.",
            "fixedCode": "        lastWithdrawTime[msg.sender] = now;\n        balances[msg.sender] -= _weiToWithdraw;\n        require(msg.sender.call.value(_weiToWithdraw)());"
        }
    ]
}