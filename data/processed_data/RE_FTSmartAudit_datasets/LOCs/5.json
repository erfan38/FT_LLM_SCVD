{
    "vulnerabilities": [
        {
            "vulnerableLines": "88-91",
            "vulnerableCode": [
                "            if(_addr.call.value(_wei)())",
                "            {",
                "                Holders[_addr]-=_wei;",
                "            }"
            ],
            "vulnerabilityReason": "The code calls the `_addr.call.value(_wei)()` to send Ether before updating the holder's balance with `Holders[_addr]-=_wei`. This allows an attacker with a fallback function in their contract to re-enter the `WithdrawToHolder` function before the balance is updated, potentially allowing them to withdraw more funds than they should be able to.",
            "potentialSecurityRisk": "An attacker could create a malicious contract that re-enters the `WithdrawToHolder` function upon receiving Ether, enabling them to drain funds from the `Holders` mapping by repeatedly invoking the withdrawal before their balance is reduced.",
            "fixedCode": "            Holders[_addr]-=_wei; // Update balance first before sending Ether\n            if(!_addr.call.value(_wei)()) { // Check if the transfer was successful\n                Holders[_addr]+= _wei; // Revert balance if the transfer fails\n            } // This fixes the issue by updating state before sending funds and reverts balance if transfer fails."
        }
    ]
}