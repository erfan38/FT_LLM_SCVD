{
    "vulnerabilities": [
        {
            "vulnerableLines": "323-323",
            "vulnerableCode": [
                "if(!owner.send(etherValue))revert();"
            ],
            "vulnerabilityReason": "The low-level call to `send()` sends Ether to the owner after the state change in the `getTokens()` function, which can lead to reentrancy attacks as the recipient contract can execute arbitrary code before the Ether transfer completes.",
            "potentialSecurityRisk": "If the owner is a contract, it could re-enter the `getTokens()` function (or invoke other vulnerable functions) before the state changes are applied, allowing an attacker to withdraw funds multiple times.",
            "fixedCode": "(bool success, ) = owner.call.value(etherValue)();\nrequire(success, \"Transfer failed\");"
        },
        {
            "vulnerableLines": "120-120",
            "vulnerableCode": [
                "assert(_to.call.value(0)(bytes4(keccak256(_custom_fallback)), msg.sender, _value, _data));"
            ],
            "vulnerabilityReason": "The direct low-level call to `_to` occurs after balance updates, which allows the receiving contract to execute code that could call back into this contract before the state is fully updated, creating a potential reentrancy risk.",
            "potentialSecurityRisk": "Exploiting this loop, an attacker can manipulate the transfer process by making several calls before the final state is established, leading to loss of funds.",
            "fixedCode": "// Perform balance updates first before interacting with the external call;\nbalances[msg.sender] = balances[msg.sender].sub(_value);\nbalances[_to] = balances[_to].add(_value);\n(bool success, ) = _to.call(bytes4(keccak256(_custom_fallback)), msg.sender, _value, _data);\nrequire(success, \"Fallback function call failed\");"
        },
        {
            "vulnerableLines": "262-262",
            "vulnerableCode": [
                "function distr(address _to, uint256 _amount) canDistr private returns (bool) {"
            ],
            "vulnerabilityReason": "The lack of visibility modifiers allows this function to be called externally, which may be exploited by a malicious contract trying to manipulate the distribution process.",
            "potentialSecurityRisk": "An attacker can call `distr` directly and manipulate the state of token distribution in an unintended manner, potentially leading to loss of tokens or funds.",
            "fixedCode": "function distr(address _to, uint256 _amount) canDistr internal returns (bool) {"
        }
    ]
}