{
    "vulnerabilities": [
        {
            "vulnerableLines": "3-4",
            "vulnerableCode": [
                "uint256 seed = uint256(keccak256(abi.encodePacked(block.timestamp, block.difficulty)));",
                "address winner = address(uint160(seed));"
            ],
            "vulnerabilityReason": "The use of 'block.timestamp' in the random number generation process allows miners to manipulate the block timestamp, which can lead to predictable outcomes. This presents a security vulnerability as an attacker can influence the selection of the winner by adjusting the timestamp.",
            "potentialSecurityRisk": "Since miners control the block timestamp, they can exploit this to maximize their chances of winning rewards, undermining the fairness of the distribution process and potentially allowing collusion among miners.",
            "fixedCode": "uint256 seed = uint256(keccak256(abi.encodePacked(blockhash(block.number - 1), block.difficulty))); // Using blockhash of the previous block for better randomness."
        }
    ]
}