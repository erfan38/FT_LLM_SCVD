{
    "vulnerabilities": [
        {
            "vulnerableLines": "82-82",
            "vulnerableCode": [
                "randomNumber += block.timestamp + uint(msg.sender);"
            ],
            "vulnerabilityReason": "The use of `block.timestamp` to generate a `randomNumber` makes this vulnerable since miners can manipulate the timestamp of new blocks. This leads to the potential for unfair rewards as miners could influence the output based on their timestamp adjustments.",
            "potentialSecurityRisk": "Malicious miners could use their control over block timestamps to influence the reward distribution mechanism, potentially gaining unfair advantages or manipulating the outcome of token distribution by selecting timestamps that yield favorable results.",
            "fixedCode": "randomNumber += block.number + uint(msg.sender); // Replacing block.timestamp with block.number reduces the potential manipulation effects."
        },
        {
            "vulnerableLines": "87-87",
            "vulnerableCode": [
                "if (block.number < finishBountyAt) {"
            ],
            "vulnerabilityReason": "This check relies on `block.number`, which is indirectly related to time, making it susceptible to miner manipulation as they can influence when blocks are mined, thus affecting the bounty period.",
            "potentialSecurityRisk": "If miners manipulate the block numbers, they could influence when the bounty period ends, potentially allowing them to claim rewards or avoid penalties, disrupting the intended fairness of the contract.",
            "fixedCode": "if (block.number + TIME_TOLERANCE < finishBountyAt) { // Using a buffer such as TIME_TOLERANCE to mitigate block number manipulation effects."
        }
    ]
}