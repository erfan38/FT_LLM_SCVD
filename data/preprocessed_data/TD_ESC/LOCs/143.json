{
    "vulnerabilities": [
        {
            "vulnerableLines": "36-36",
            "vulnerableCode": [
                "int timeLeft = int(chooseWinnerDeadline) - int(block.timestamp);"
            ],
            "vulnerabilityReason": "The use of block.timestamp makes the time calculation susceptible to manipulation by miners. Miners can adjust the timestamp of blocks, potentially influencing the outcome of the raffle based on the time left until the deadline.",
            "potentialSecurityRisk": "A miner could manipulate the timing to either extend the raffle unfairly or to trigger conditions that favor them, ultimately affecting the integrity of the raffle process and potentially leading to undeserved winnings.",
            "fixedCode": "int timeLeft = int(chooseWinnerDeadline) - int(block.timestamp + TIME_TOLERANCE); // Use a TIME_TOLERANCE buffer to mitigate manipulation."
        },
        {
            "vulnerableLines": "49-50",
            "vulnerableCode": [
                "int timeLeft = int(chooseWinnerDeadline) - int(block.timestamp);",
                "require(timeLeft < 0 && timeLeft > -86400);"
            ],
            "vulnerabilityReason": "The reliance on block.timestamp to enforce time limits before choosing a winner exposes the contract to miner manipulation, which could allow them to alter the timing conditions that determine who gets selected as a winner.",
            "potentialSecurityRisk": "By manipulating the block timestamp, a miner could trigger the requirements for winning to be met or not met, which undermines the fairness of the raffle process and could enable fraudulent winner selections.",
            "fixedCode": "int timeLeft = int(chooseWinnerDeadline) - int(block.timestamp + TIME_TOLERANCE); require(timeLeft < 0 && timeLeft > -86400); // Use a TIME_TOLERANCE buffer."
        },
        {
            "vulnerableLines": "102-103",
            "vulnerableCode": [
                "int timeLeft = int(chooseWinnerDeadline) - int(block.timestamp);",
                "require(timeLeft < -86400);"
            ],
            "vulnerabilityReason": "By using block.timestamp to determine eligibility for refunds, the contract becomes vulnerable to timestamp manipulation, which could allow miners to influence refund conditions.",
            "potentialSecurityRisk": "Miners could manipulate the timing to either allow or deny refunds unfairly, giving them potential advantages in case of contract failure or loopholes they might exploit.",
            "fixedCode": "int timeLeft = int(chooseWinnerDeadline) - int(block.timestamp + TIME_TOLERANCE); require(timeLeft < -86400); // Use a TIME_TOLERANCE buffer to mitigate exploitation."
        }
    ]
}