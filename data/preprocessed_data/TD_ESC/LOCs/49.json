{
    "vulnerabilities": [
        {
            "vulnerableLines": "134-134",
            "vulnerableCode": [
                "require(block.timestamp > lockStartTime);"
            ],
            "vulnerabilityReason": "The contract relies on block.timestamp to determine if tokens can be allocated. Miners can manipulate this timestamp to achieve different effects, such as allowing or preventing the allocation of tokens before the intended time.",
            "potentialSecurityRisk": "This situation can grant unfair advantages, allowing miners to unlock tokens sooner than intended or prevent legitimate allocations, potentially manipulating the vesting schedule and impacting the appropriate release of funds.",
            "fixedCode": "require(block.timestamp + TIME_TOLERANCE > lockStartTime); // Introduce some saturation period for miners' manipulation"
        },
        {
            "vulnerableLines": "168-168",
            "vulnerableCode": [
                "uint256 stage = (block.timestamp.sub(lockStartTime)).div(vestingMonths);"
            ],
            "vulnerabilityReason": "The calculation of the vesting stage directly depends on block.timestamp, which opens up the possibility for miners to adjust the timestamp to alter the calculated vesting stage, potentially releasing more tokens earlier than expected.",
            "potentialSecurityRisk": "With miners able to manipulate the timestamp, they could exploit the contract to either receive more tokens than entitled or decrease their own lock period, which would benefit a miner or colluding parties.",
            "fixedCode": "uint256 stage = (now.sub(lockStartTime)).div(vestingMonths); // use proper time checks to limit miner exploitation"
        }
    ]
}