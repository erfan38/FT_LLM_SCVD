{
    "vulnerabilities": [
        {
            "vulnerableLines": "5-6",
            "vulnerableCode": [
                "userBalances[msg.sender] -= _amount;",
                "userBalances[_to] += _amount;"
            ],
            "vulnerabilityReason": "The transfer function modifies userBalances without performing checks to ensure sufficient balance for the sender or checking for potential overflow on the recipient's balance. If the sender's balance is less than _amount, this will result in an underflow. In Solidity versions prior to 0.8.0, this underflow would cause the sender to appear to have a very large balance, allowing them to transfer more tokens than they actually own. Additionally, adding _amount to the recipient's balance without checking could cause an overflow if the total exceeds the maximum uint256 value.",
            "potentialSecurityRisk": "An attacker could exploit this vulnerability to transfer more tokens than they are entitled to, either by creating an underflow scenario or overflowing the recipient's balance, leading to incorrect balances and potential unauthorized access to funds.",
            "fixedCode": "require(userBalances[msg.sender] >= _amount, \"Insufficient balance\");\nuserBalances[msg.sender] -= _amount;\nuserBalances[_to] += _amount;\nrequire(userBalances[_to] >= _amount, \"Overflow detected\"); // This line is more for safety, ensuring to catch any overflow."
        }
    ]
}